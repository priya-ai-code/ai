from collections import defaultdict
class Graph:
     def __init__(self):
         self.graph = defaultdict(list)
     def addEdge(self,u,v):
        self.graph[u].append(v)
     def DFSUtil(self, v, visited):
         visited[v]= True
         print (v,end=" ")
         for i in self.graph[v]:
            if visited[i] == False:
                self.DFSUtil(i, visited)
     def DFS(self,v):
        V = v 
        visited =[False]*(V)
        for i in range(V):
            if visited[i] == False:
                self.DFSUtil(i, visited)
g = Graph()
v,e=map(int,input("Enter no of vertices and edges").split())
print("Enter")
for i in range(e):
  s,d=map(int,input().split())
  g.addEdge(s,d)
print ("Following is Depth First Traversal")
g.DFS(v)
